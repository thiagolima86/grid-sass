/* Grid for Thiago Lima */


/* Grid Configure */

$GridGutter : 20px;
$GridColumns : 12;
$GridContainerWidth :1200px;
$BreakPoint : (
	mobile : (max : 720px),
	tablet : (min:720px, max : 970px),
	desktop : (min:970px, max : 1200px),
	full : (min : 1200px)
	);


 /* Mixins */
 @function grid-width($x){
	@return $x*(100%/$GridColumns);
}



@mixin container($type:fixed){
	width:100%;
	display:block;
	margin:0 auto;
	@if $type == fixed{
		max-width: $GridContainerWidth;
	}@else if($type == fluid){
		max-width: 100%;
	}
}
@mixin clearfix() {
	&:before,
	&:after {
	    content:"";
	    display:table;
	}
	&:after {
	    clear:both;
	}
}
@mixin column($x) {
	position:relative;
	display:block;
	min-height: 1px;
	float:left;
	padding-left:$GridGutter;
	padding-right:$GridGutter;
	-webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    width:grid-width($x);
}


@mixin responsive($x, $devince:null){

	@if $devince != null{
		@each $label, $map in $BreakPoint{

			@if $label == $devince{
				$min-width: map-get($map, min);
  				$max-width: map-get($map, max);

  				@if $min-width != null and $max-width != null{
  					@media screen and (min-width: $min-width) and (max-width: $max-width) {
						width:grid-width($x);
					}
  				}@else if $min-width == null{
  					@media screen and (max-width: $max-width) {
						width:grid-width($x);
					}
  				}@else if $max-width == null{
  					@media screen and (min-width: $min-width) {
						width:grid-width($x);
					}
  				}
			}
		}
	}@else{
		width:grid-width($x);
	}

}

@mixin offset($x, $type:push){
	@if $type == push{
		margin-left: $x*(100%/$GridColumns);
	}@else if $type == pull{
		left: -$x*(100%/$GridColumns);
	}
}
@mixin push($x, $devince:null){

	@if $devince != null{
		@each $label, $map in $BreakPoint{

			@if $label == $devince{
				$min-width: map-get($map, min);
  				$max-width: map-get($map, max);

  				@if $min-width != null and $max-width != null{
  					@media screen and (min-width: $min-width) and (max-width: $max-width) {
						@include offset($x, push);
					}
  				}@else if $min-width == null{
  					@media screen and (max-width: $max-width) {
						@include offset($x, push);
					}
  				}@else if $max-width == null{
  					@media screen and (min-width: $min-width) {
						@include offset($x, push);
					}
  				}
			}
		}
	}@else{
		@include offset($x, push);
	}
}

@mixin pull($x, $devince:null){

	@if $devince != null{
		@each $label, $map in $BreakPoint{

			@if $label == $devince{
				$min-width: map-get($map, min);
  				$max-width: map-get($map, max);

  				@if $min-width != null and $max-width != null{
  					@media screen and (min-width: $min-width) and (max-width: $max-width) {
						@include offset($x, pull);
					}
  				}@else if $min-width == null{
  					@media screen and (max-width: $max-width) {
						@include offset($x, pull);
					}
  				}@else if $max-width == null{
  					@media screen and (min-width: $min-width) {
						@include offset($x, pull);
					}
  				}
			}
		}
	}@else{
		@include offset($x, pull);
	}
}



/* Classes */

.container{
	@include container();
}
.container-fluid{
	@include container(fluid);
}
.row{
	@include clearfix();

}

@for $i from 1 through $GridColumns {
	.column-#{$i}{
		@include column($i);
	}
}

@each $label, $map in $BreakPoint{
	@for $i from 1 through $GridColumns {
		.#{$label}-#{$i}{
			@include responsive($i, $label);
		}
	}
}

@each $label, $map in $BreakPoint{
	@for $i from 1 through $GridColumns {
		.#{$label}-push-#{$i}{
			@include push($i, $label);
		}
	}
	@for $i from 1 through $GridColumns {
		.#{$label}-pull-#{$i}{
			@include pull($i, $label);
		}
	}
}